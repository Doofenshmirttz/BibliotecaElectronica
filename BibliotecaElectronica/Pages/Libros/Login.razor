@layout NoMainLayout

@page "/"
@inject NavigationManager NavigationManager
<style>
    body {
        background-image: linear-gradient(to left, #A1C4FD, #93A5CF);
    }
</style>
<style>
    .gardiente-texto {
        font-size: 72px;
        background: -webkit-linear-gradient(#6AC9BE, #93A5CF);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
</style>



<div class="container col-xl-10 col-xxl-8 px-4 py-5">
    <div class="row align-items-center g-lg-5 py-5">
        <div class="col-lg-7 text-center text-lg-start">
            <h1 class="display-4 fw-bold lh-1 text-body-emphasis mb-3">¿Qué es Web Library?</h1>
            <p class="col-lg-10 fs-4">Este es mi proyecto para Lenguaje de Programación 3. Una biblioteca electrónica hecha en blazor. Espero y la disfrutes :)</p>
            <NavLink class="nav-link text-center fw-bold" href="https://github.com/Doofenshmirttz/BibliotecaElectronica.git" target="_blank">
                <img src="https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg" alt="Imagen del repositorio de GitHub" width="15" height="15">
                Repositorio de GitHub
            </NavLink>
        </div>

        
       
        
            <div class="col-md-10 mx-auto col-lg-5">
                <form class="p-4 p-md-5 border rounded-3 bg-body-tertiary">
                    <EditForm Model="usuariorequest" OnValidSubmit="IniciarSesion">
                        <DataAnnotationsValidator />
                        <div class="form-floating mb-3">
                            <MatThemeProvider Theme="@theme1">
                                <p>
                                    <MatTextField @bind-Value="@usuariorequest.NombreUsuario" Dense="true" Icon="account_circle" IconTrailing="true" Label="Usuario" FullWidth="true"></MatTextField>
                                </p>
                            </MatThemeProvider>
                            <ValidationMessage For="@(() => usuariorequest.NombreUsuario)" />
                        </div>
                        <div class="form-floating mb-3">

                            <MatThemeProvider Theme="@theme1">
                                <p>
                                    <MatTextField @bind-Value="@usuariorequest.Clave" Label="Contraseña" Icon="fingerprint" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
                                </p>
                            </MatThemeProvider>

                            <ValidationMessage For="@(() => usuariorequest.Clave)" />
                        </div>
                        <div class="checkbox mb-3">
                             <MatThemeProvider Theme="@theme1">
                                <MatChipSet>
                                    <MatChip Label="The biggest things comes in little steps"></MatChip>

                                </MatChipSet>
                            </MatThemeProvider>
                        </div>

                        <p class=" text-center">
                             <MatThemeProvider Theme="@theme1">
                       
                                 <MatButton  Raised="true" Icon="exit_to_app">Ingresar</MatButton>
                             </MatThemeProvider>
                        </p>
                       

                        <hr class="my-4">

                        <p class=" text-center">
                            <MatButtonLink Style="color: royalblue;" Class="text text-center" @onclick="()=>{RegistrarseForm = true;}" Icon="perm_contact_calendar" Href="#">Registrate</MatButtonLink>
                        </p>
                      
                        

                    </EditForm>

                </form>
            </div>
        
       
    </div>
</div>
@if (RegistrarseForm)
{

    <div class="modal rounded-3" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable rounded-3">
            <div class="modal-content rounded-4 shadow">

                <div class="modal-body py-0">
                    <div class="modal-backdrop fade show"></div>
                    <div class="modal rounded-3" tabindex="-1" role="dialog" style="display: block;">
                        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable rounded-3">
                            <div class="modal-content rounded-4 shadow">
                                <div class="modal-header border-bottom-0">
                                    <h2 class="modal-title fs-3"><b>Registrate</b> </h2>

                                    <button type="button" class="btn-close" @onclick="Renovar" data-bs-dismiss="modal" aria-label="Close">
                                        <span>&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body py-0">

                                    <form>
                                        <EditForm Model="usuariorequest" OnValidSubmit="Send">
                                            <DataAnnotationsValidator />

                                            <hr class="my-2">
                                            <div class="mb-3 text-center">
                                                <MatThemeProvider Theme="@theme1">
                                                    <MatDialogContent>
                                                        <p>Datos personales</p>



                                                        <MatTextField Label="Tu nombre" @bind-Value="@usuariorequest.Nombre"></MatTextField>
                                                        <MatTextField Label="Tu apellido" @bind-Value="@usuariorequest.Apellido"></MatTextField>



                                                    </MatDialogContent>
                                                </MatThemeProvider>
                                            </div>





                                            <div class="form-floating mb-4">
                                                <MatThemeProvider Theme="@theme1">
                                                    <p>
                                                        <MatTextField @bind-Value="@usuariorequest.NombreUsuario" Dense="true" Icon="face" IconTrailing="true" Label="Usuario" FullWidth="true"></MatTextField>
                                                    </p>
                                                </MatThemeProvider>
                                                <ValidationMessage For="@(() => usuariorequest.NombreUsuario)" class="validation-message" />

                                            </div>
                                            <div class="form-floating mb-4">

                                                <MatThemeProvider Theme="@theme1">
                                                    <p>
                                                        <MatTextField @bind-Value="@usuariorequest.Clave" Label="Contraseña" Icon="fingerprint" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
                                                    </p>
                                                </MatThemeProvider>
                                                <ValidationMessage For="@(() => usuariorequest.Clave)" class="validation-message" />
                                            </div>

                                            <p class="text-center">

                                                <MatThemeProvider Theme="@theme1">


                                                    <MatButton type="submit" Raised="true" Icon="perm_contact_calendar">Registrarse</MatButton>
                                                </MatThemeProvider>
                                            </p>

                                        </EditForm>
                                    </form>


                                </div>

                            </div>
                        </div>
                    </div>


                </div>

            </div>
        </div>
    </div>
}

@if(acceso)
{
   
    
    
    NavigationManager.NavigateTo($"/libros/{userData.User.UsuarioId}");
    Renovar();
}


 <MatThemeProvider Theme="@theme1">
    
    <MatSnackbar @bind-IsOpen="@NoCreado" Stacked="true">
        <MatSnackbarContent>@MensajeError</MatSnackbarContent>
        <MatSnackbarActions>
            <MatButton @onclick="()=>{NoCreado = false;}" Raised="true">Ok</MatButton>
        </MatSnackbarActions>
    </MatSnackbar>
 </MatThemeProvider> 




@if(creado)
{
    <MatThemeProvider Theme="@theme1">

        <MatSnackbar @bind-IsOpen="@creado" Stacked="true">
            <MatSnackbarContent>@MensajeError</MatSnackbarContent>
            <MatSnackbarActions>
                <MatButton @onclick="()=>{creado = false; RegistrarseForm = !RegistrarseForm;}" Raised="true">Ok</MatButton>
            </MatSnackbarActions>
        </MatSnackbar>
    </MatThemeProvider>
    Renovar();
}
    



<MatThemeProvider Theme="@theme1">

    <MatSnackbar @bind-IsOpen="@MissingUser" Stacked="true">
        <MatSnackbarContent>@MensajeError</MatSnackbarContent>
        <MatSnackbarActions>
            <MatButton @onclick="()=>{MissingUser = !MissingUser;}" Raised="true">Ok</MatButton>
        </MatSnackbarActions>
    </MatSnackbar>
</MatThemeProvider>



@code {
    public UsuarioRequest usuariorequest { get; set; } = new UsuarioRequest();
    public UsuarioResponse usuarioresponse { get; set; } = new UsuarioResponse();



    public bool acceso { get; set; } = false;
    public bool creado { get; set; } = false;
    public bool NoCreado { get; set; } = false;

    public string MensajeError { get; set; } = "";
    public bool MissingUser { get; set; }
    public bool RegistrarseForm { get; set; } = false;


    protected override void OnInitialized()
    {

        base.OnInitialized(); 
        acceso = false;
        Renovar();
    }

    public void Renovar()
    {
        usuariorequest = new UsuarioRequest();
        usuarioresponse = new UsuarioResponse();
        acceso = false;
        RegistrarseForm = false;
    }


    public async Task IniciarSesion()
    {
        var resultado = await UsuarioServices.Consultar(usuariorequest);
        if (resultado.Success)
        {
            MissingUser = false;
            usuarioresponse = resultado.Data!;
            acceso = true;
            userData.User.UsuarioId = usuariorequest.IdUsuario;
            userData.User.UsuarioUserName = usuariorequest.NombreUsuario;
            userData.User.UsuarioNombre = usuariorequest.Nombre;

        }
        else
        {
            MissingUser = true;
            MensajeError = resultado.Message;
        }



    }

    MatTheme theme1 = new MatTheme()
        {
            Primary = "#536dfe",
            Secondary = "#303f9f",
            
        };

    
    public async Task Send()
    {


        // Debo registrar el libro
        var r = await UsuarioServices.Crear(usuariorequest);
        if (r.Success)
        {


            RegistrarseForm = false;
            creado = true;
            MensajeError = r.Message!;

            

        }
        else
        {
            NoCreado = true;
            MensajeError = r.Message!;
        }
         

    }
    
}
