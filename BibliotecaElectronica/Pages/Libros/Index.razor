@page "/"



<link rel="stylesheet" href="Index.css">



<style>
    
    .gardiente-texto{
        font-size: 72px;
        background: -webkit-linear-gradient(#6AC9BE, #93A5CF);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
   

</style>

<style>

    .validation-message {
        display: block;
        text-align: center;
        color: #dc3545;
        font-size: 12px;
    }

    .modal-backdrop.fade.show {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-dialog {
        max-width: 500px;
    }

    .card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
    }

        .card:hover {
            transform: translateY(-2px);
        }
</style>

<style>
    .modal-title .heart-emoji {
        font-family: "Apple Color Emoji", "Segoe UI Emoji", sans-serif;
        font-size: 1.5rem;
        line-height: 1;
    }
</style>





<div class="text-center">
    <h1 class="gardiente-texto">Web Library</h1>
    <p class="lead fw-bold">Bienvenido</p>
</div>




<div class="alert alert-success rounded-3 mb-8" role="alert">
    <i class="bi bi-book-fill"></i> 
    <b>    Cantidad de libros almacenados: </b> @Libros.Count
</div>





<div class="d-flex mb-3">
    <input @bind-value="busqueda" type="text" class="form-control form-control-sm rounded-start-3" style="max-width: 200px;" placeholder="Buscar un libro" aria-label="Recipient's username" aria-describedby="button-addon2">
    <button class="btn btn-success bi bi-search ms-2 rounded-end-3" type="button" id="button-addon2"></button>
</div>


@if(HolaDenuevo)
{
    <div class="modal fade show" style="display: block;">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content rounded-4 shadow">
                <div class="modal-body p-5">
                    <div class="d-flex justify-content-center">
                        <h3 class="fw mb-0 text-center">Hola denuevo usuario</h3>
                    </div>

                    <ul class="d-grid gap-4 my-5 list-unstyled small">
                        <li class="d-flex gap-4">
                            <svg class="bi text-body-secondary flex-shrink-0" width="48" height="48" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                                <image xlink:href="https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-12/256/waving-hand.png" width="48" height="48" />
                            </svg>

                            <div>
                                <h4 class="mb-3">Bienvenido Internauta</h4>
                               <h6 class="mb-3"> 
                                   ¿Libros? Si, A todos nos encantan.
                                Y como sabemos que te encantan creamos
                                    <label class="fs-6 gardiente-texto">Web Library</label>.
                               </h6>
                            </div>
                        </li>
                       
                       
                    </ul>
                    <button @onclick="()=>{HolaDenuevo = !HolaDenuevo;}" type="button" class="btn btn-lg btn-primary mt-5 w-100" data-bs-dismiss="modal">Gracias</button>
                </div>
            </div>
        </div>
    </div>
}

@if(EliminarLibro)
{
    <div class="modal-backdrop fade show rounded-3"></div>
    <div class="modal rounded-3" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable rounded-3">
            <div class="modal-content rounded-4 shadow">
                <div class="modal-header border-bottom-0">
                    <h1 class="modal-title fs-5 text-center"><b>¿Desea Eliminar el libro @libroAeliminar.Nombre </b> </h1>


                </div>
                
                <div class="modal-footer flex-column align-items-stretch w-100 gap-2 pb-3 border-top-0">
                    <button type="button" @onclick="()=>Eliminar(libroAeliminar)" class="btn btn-lg btn-primary">Si</button>
                </div>
                <div class="modal-footer flex-column align-items-stretch w-100 gap-2 pb-3 border-top-0">
                    <button type="button" @onclick="()=>{Cancelar(); EliminarLibro=!EliminarLibro;}" class="btn btn-lg btn-danger">No</button>
                </div>
            </div>
        </div>
    </div>
}


@if (ShowForm)
{
    <form class="row g-3 needs-validation" novalidate>
        <EditForm Model="request" OnValidSubmit="Send">



            <div class="modal-backdrop fade show"></div>

            <div class="modal" tabindex="-1" role="dialog" style="display:block;">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">

                            @if (Doing == true)
                            {
                                <h5 class="modal-title"> Guardar libro</h5>

                            }
                            else
                            {
                                <h5 class="modal-title"> Modificar libro</h5>
                            }

                            <button type="button" class="btn-close" @onclick="Cancelar" data-bs-dismiss="modal" aria-label="Close">
                                <span>&times;</span>
                            </button>
                        </div>

                        <div class="modal-body">


                            <DataAnnotationsValidator />


                            <div class="form-floating mb-4">
                                <input type="text" class="form-control rounded-4" id="floatingInput" @bind="@request.Nombre" placeholder="Nombre del libro" required>
                                <label for="floatingInput">Nombre del libro</label>
                                <div class="valid-feedback">
                                    Looks good!
                                </div>

                                <ValidationMessage For="@(() => request.Nombre)" />


                            </div>



                            <div class="form-floating mb-4">
                                <input type="text" class="form-control rounded-4" id="floatingInput" @bind="@request.Autor" placeholder="Autor del libro" required>
                                <label for="floatingInput">Autor del libro</label>
                                <div class="valid-feedback">
                                    Looks good!
                                </div>
                                <div class="label align-content-center">
                                    <ValidationMessage For="@(() => request.Autor)" class="validation-message" />


                                </div>



                            </div>



                            <div class="input-group mb-3">
                                <label class="input-group-text rounded-start-4" for="inputGroupSelect01">Género literario</label>
                                <select class="form-select rounded-end-4" id="inputGroupSelect01" required @bind="@request.Genero" requiered>
                                    <option selected></option>
                                    <option value="Novela">Novela</option>
                                    <option value="Poesía">Poesía</option>
                                    <option value="Drama">Drama</option>
                                    <option value="Fantasía">Fantasía</option>
                                    <option value="Bélico">Bélico</option>
                                    <option value="Historia">Historia</option>
                                    <option value="Thriller">Thriller</option>
                                    <option value="Horror">Horror</option>
                                    <option value="Novelas Ligeras">Novelas ligeras</option>
                                    <option value="Manga">Manga</option>
                                    <option value="Infantil">Infantil</option>
                                    <option value="Ciencia/Educativo">Ciencia/Educativo</option>
                                    <option value="Ciencia Ficcion">Ciencia Ficción</option>
                                </select>
                                
                            </div>

                           
                          


                            <div class="mb-3">
                                <label for="formFile" class="form-label">Seleccionar una portada</label>
                                <InputFile required class="form-control rounded-end-4" id="formFile" OnChange="HandleFileChange"/>
                                <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(() => request.Portada)" />
                                <div class="invalid-feedback">
                                    Porfavor selecciona una opcion
                                </div>

                            </div>



                            <div class="mb-3">
                                <i class="bi badge-info"></i>
                                <p style="color: #dc3545;" class="fs-10 text-center fw-bold">Procura que las imagenes no sean tan grandes</p>
                                <p class="fs-11 text-center">O puedes</p>
                                <NavLink class="nav-link text-center fw-bold" href="https://www.iloveimg.com/es/comprimir-imagen" Match="NavLinkMatch.All" target="_blank">
                                    <span class="oi oi-box" aria-hidden="true"></span> Comprimir la imágen (Opción recomendada)
                                </NavLink>

                            </div>

                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Guardar</button>
                            <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cerrar</button>
                        </div>
                    </div>
                </div>
            </div>

        </EditForm>
    </form>
    
}

@if (Saving)
{
    <div class="modal-backdrop fade show rounded-3"></div>
    <div class="modal rounded-3" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable rounded-3">
            <div class="modal-content rounded-4 shadow">
                <div class="modal-header border-bottom-0">
                    <h1 class="modal-title fs-5"><b>Acción realizada correctamente</b> </h1>
                   
                   
                </div>
                <div class="modal-body py-0">
                    @if (Doing == true)
                    {
                        <p>Se ha guardado el libro: <b>@NombreAnterior</b> correctamente</p>
                    }
                    else
                    {
                        <p>Se ha Modificado el libro a: <b>@NombreAnterior</b> correctamente</p>

                    }

                    <svg class="bi text-body-secondary flex-shrink-0" width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                        <image xlink:href="https://em-content.zobj.net/thumbs/160/apple/81/heavy-black-heart_2764.png" width="48" height="48" />
                    </svg>
                </div>
                <div class="modal-footer flex-column align-items-stretch w-100 gap-2 pb-3 border-top-0">
                    <button type="button" @onclick="()=>{Saving = !Saving;}" class="btn btn-lg btn-primary">Okey</button>
                </div>
            </div>
        </div>
    </div> 
   
}



@if (Saving)
{
    <div class="modal-backdrop fade show rounded-3"></div>
    <div class="modal rounded-3" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable rounded-3">
            <div class="modal-content rounded-4 shadow">
                <div class="modal-header border-bottom-0">
                    <h1 class="modal-title fs-5"><b>Acción realizada correctamente</b> </h1>


                </div>
                <div class="modal-body py-0">
                    @if (Doing == true)
                    {
                        <p>Se ha guardado el libro: <b>@NombreAnterior</b> correctamente</p>
                    }
                    else
                    {
                        <p>Se ha Modificado el libro a: <b>@NombreAnterior</b> correctamente</p>

                    }

                    <svg class="bi text-body-secondary flex-shrink-0" width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                        <image xlink:href="https://em-content.zobj.net/thumbs/160/apple/81/heavy-black-heart_2764.png" width="48" height="48" />
                    </svg>
                </div>
                <div class="modal-footer flex-column align-items-stretch w-100 gap-2 pb-3 border-top-0">
                    <button type="button" @onclick="()=>{Saving = !Saving;}" class="btn btn-lg btn-primary">Okey</button>
                </div>
            </div>
        </div>
    </div>

}


<div class="card shadow position-relative rounded-pill">
    <div class="card shadow position-relative rounded-4">
        <button class="btn btn-primary rounded-circle animate__animated animate__fadeIn" @onclick="()=>{ShowForm = !ShowForm; Doing = true;}" style="position: absolute; top: -20px; right: -20px; width: 40px; height: 40px; padding: 0;">
            <i class="bi bi-plus" style="line-height: 40px; font-size: 18px;"></i>
        </button>
    </div>
    <table class="table-light table table-bordered rounded-pill m-0">
        <thead >
            <tr class="table-primary">
                <th class="text-center">Portada</th>
                <th class="text-center">Nombre</th>
                <th class="text-center">Autor</th>
                <th class="text-center">Género</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var libro in Libros.Where(l => l.Nombre.ToLower().Contains(busqueda.ToLower())))
            {
                <tr>
                    <td class="text-center"><img src="data:image;base64,@Convert.ToBase64String(libro.Portada)" class="img-fluid" alt="Portada" style="max-height: 100px;"></td>
                    <td class="text-center">@libro.Nombre</td>
                    <td class="text-center">@libro.Autor</td>
                    <td class="text-center">@libro.Genero</td>
                    <td class="text-center">
                        <div class="d-flex justify-content-center">
                            
                           

                            <button  @onclick="()=>ModalEliminar(libro)" class="btn btn-link text-danger text-decoration-none" type="button">
                                <div class="d-flex flex-column align-items-center fw-bold">
                                    <i class="bi bi-trash" style="line-height: 32px; font-size: 22px;"></i>
                                    <span>Eliminar</span>
                                </div>
                            </button>

                            <button @onclick="()=>Seleccionar(libro.Id)" class="btn btn-focus text-primary text-decoration-none" type="button">
                                <div class="d-flex flex-column align-items-center fw-bold">
                                    <i class="bi bi-pencil" style="line-height: 32px; font-size: 22px;"></i>
                                    <span>Editar</span>
                                </div>
                            </button>
                           
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>






@code {

    public void ModalEliminar(LibroResponse lib)
    {

        libroAeliminar = lib;
        EliminarLibro = true;

    }

    LibroResponse libroAeliminar { get; set; } = new LibroResponse();

    private bool HolaDenuevo{ get; set; }

    private string busqueda = "";

    private bool SeElimino = true;

    private bool EliminarLibro { get; set; } = false;

    private bool Saving { get; set; } = false;

    private bool Doing {get; set;} 

    private string? NombreAnterior { get; set; }

    public string? LibroExiste { get; set; }



    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);



        request.Portada = buffer;
    }


    // Para mostrar el formulario de eliminar
    public bool ShowForm { get; set; } = false;

    // Creamos una lista con todos los libros
    public List<LibroResponse> Libros { get; set; } = new List<LibroResponse>();

    // Creamos una variable de tipo LibroRequest para crear peticiones para almacenar libros
    public LibroRequest request { get; set; } = new LibroRequest();

    // Creamos una variable de filtro
    public string Filtro { get; set; } = "";

    // Para que se cierre el formulario de añadir
    void Cancelar()
    {
        request = new LibroRequest();
        ShowForm = false;
        libroAeliminar = new LibroResponse();
        

    }

    // Funcion para cargar los libros de manera asincrona (independiente)
    async Task CargarLibros()
    {
        // Ejecutamos la función Consultar la cual devuelve una lista de LibroResponse
        var resultado = await libroServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Libros = resultado.Data!;
        }
    }

    // Esta función se va a ejecutar de forma asincrona cuando se abra la app
    protected override async Task OnInitializedAsync()
    {
        await CargarLibros();
        HolaDenuevo = true;
    }

    // Si se envía un request
    public async Task Send()
    {
        NombreAnterior = request.Nombre;
        // Se evalua si tiene un id, es decir, si existe
        // Si no
        if (request.Id == 0)
        {


            // Debo registrar el libro
            var r = await libroServices.Crear(request);
            if (r.Success)
            {
                Doing = true;

                Saving = true;
                Cancelar();
                await CargarLibros();
                StateHasChanged();

            }
        }
        else // Si existe, es decir, si tiene un Id
        {


            // Debo solicitar modificar el libro
            var r = await libroServices.Modificar(request);
            if (r.Success)
            {
                Saving = true;
                Doing = false;
                Cancelar();
                await CargarLibros();
                StateHasChanged();
            }
        }


    }

    public void Seleccionar(int Id)
    {
        Doing = false;
        ShowForm = true;
        request = Libros
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new LibroRequest();
    }

    public async Task Eliminar(LibroResponse libro)
    {
        

        var resultado = await libroServices.Eliminar(libro.ToRequest());
        if (resultado.Success)
        {
           
            await CargarLibros();
            StateHasChanged();
        }

      
    }
}
